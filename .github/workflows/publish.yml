name: publish
on:
  push:
    tags:
      - '*'

jobs:
  publish:
    name: Build and publish tagged container
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        containerName: [ "1004" ]
    permissions:
      contents: write
      packages: write
      repository-projects: read
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify tag
        run: |
          if ! [[ ${{ github.ref }} =~ ^refs/tags/[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$ ]]; then
            echo "ERR: Invalid publish version tag: ${{ github.ref }}"
            exit 1
          fi

      - name: Get version
        id: get-version
        run: echo "version=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.containerName }}
          push: false
          load: false
          provenance: false
          platforms: linux/amd64,linux/arm64
          build-args: |
            IMAGE_VERSION=${{ env.version }}
          tags: sbuerk/typo3-experimental-composermode-container-${{ matrix.containerName }}:test

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.containerName }}
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          build-args: |
            IMAGE_VERSION=${{ env.version }}
          tags: |
            sbuerk/typo3-experimental-composermode-container-${{ matrix.containerName }}:${{ env.version }}
            ${{ matrix.containerName }}:latest